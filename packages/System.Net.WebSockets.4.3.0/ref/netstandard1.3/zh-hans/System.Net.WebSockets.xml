<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>在 WebSocket 升级完成后， WebSocket 类允许应用程序发送并接收数据。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocket" /> 类的实例。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>中止 WebSocket 连接并取消任何挂起的 IO 操作。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>使用在 WebSocket 协议规范 章节 7 中定义的关闭握手关闭 WebSocket 连接以作为异步操作。</summary>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task" />。表示异步操作的任务对象。</returns>
      <param name="closeStatus">指示关闭 WebSocket 连接的原因。</param>
      <param name="statusDescription">指定一个可读的解释为连接关闭的原因。</param>
      <param name="cancellationToken">标记可用于传播取消操作的通知。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>在 WebSocket 协议规范的第 7 节 定义中指示或完成关闭握手。</summary>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task" />。表示异步操作的任务对象。</returns>
      <param name="closeStatus">指示关闭 WebSocket 连接的原因。</param>
      <param name="statusDescription">允许应用程序指定一个可读的解释为连接关闭的原因。</param>
      <param name="cancellationToken">标记可用于传播取消操作的通知。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>指示远程终结点初始关闭握手的原因。</summary>
      <returns>返回 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>允许该远程终结点描述连接已关闭的原因。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>用于清理 ASP.NET 和自我托管实现的非托管资源。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>从 WebSocket 连接异步接受数据。</summary>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task`1" />。表示异步操作的任务对象。任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性将返回包含已接收数据的 <see cref="T:System.Byte" /> 数组。</returns>
      <param name="buffer">引用应用程序缓冲区，其为接收的数据的存储位置。</param>
      <param name="cancellationToken">传播有关应取消操作的通知。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>发送 WebSocket 上连接异步的数据。</summary>
      <returns>返回 <see cref="T:System.Threading.Tasks.Task" />。表示异步操作的任务对象。</returns>
      <param name="buffer">要通过连接发送的缓冲区。</param>
      <param name="messageType">指示应用是否发送二进制或文本消息。</param>
      <param name="endOfMessage">指示在“缓冲区”的数据是否实消息的最后一部分。</param>
      <param name="cancellationToken">传播有关应取消操作的通知的标记。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>返回 WebSocket 连接的当前状态。</summary>
      <returns>返回 <see cref="T:System.Net.WebSockets.WebSocketState" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>在打开握手期间协商的子协议。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>表示在 WebSocket 协议规范的 section 11.7 中定义的著名 WebSocket 关闭代码。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>未指定错误。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>（1001）表示终结点正被移除。无法连接到服务器或客户端。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>由于服务器的错误，连接将由服务器关闭。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>（1003）因为无法接受已接收到的数据类型，客户端或服务器将停止连接。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>（1007）因为已接收到的数据类型与该消息类型不一致，客户端或服务器将停止连接。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>（1010）因为服务器应协调扩展，客户端将停止连接。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004)保留供将来使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>（1000） 该请求中履行之后，该连接关闭。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>（1008）因为终结点接收了违反其策略的消息，连接将关闭。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>（1002）由于协议错误，客户端或服务器将停止该连接。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>包含可能的 WebSocket 错误列表。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>指示连接意外终止。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>指示常规错误。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>指示在打开握手时分析 HTTP 头时发生一个错误。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>指示接收带有未知操作码的一个 WebSocket 帧。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>指示 WebSocket 对于特定操作是无效状态(例如关闭或放弃)。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>指示发生未知本地错误。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>指示传入请求不是一个合法的 websocket 请求。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>指示异常不存在本地错误信息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>指示该客户端请求一个不受支持的 WebSocket subprotocol。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>指示客户端请求 WebSocket 协议的不受支持的版本。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>表示异常，其在 WebSocket 连接上执行操作时发生。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="nativeError">异常的本机错误代码。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="nativeError">异常的本机错误代码。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="nativeError">异常的本机错误代码。</param>
      <param name="message">关于错误的说明。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="nativeError">异常的本机错误代码。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="nativeError">异常的本机错误代码。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="nativeError">异常的本机错误代码。</param>
      <param name="message">关于错误的说明。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="nativeError">异常的本机错误代码。</param>
      <param name="message">关于错误的说明。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="message">关于错误的说明。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="error">WebSocketError 枚举中的错误。</param>
      <param name="message">关于错误的说明。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="message">关于错误的说明。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketException" /> 类的实例。</summary>
      <param name="message">关于错误的说明。</param>
      <param name="innerException">指示引发当前异常的上一个异常。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>发生的异常的本机错误代码。</summary>
      <returns>返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>返回指示发生错误的类型的 WebSocketError。</summary>
      <returns>返回 <see cref="T:System.Net.WebSockets.WebSocketError" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>指示消息类型：</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>消息采用二进制格式。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>因为收到关闭的消息，接受已完成。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>该消息是明文形式。</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>表示 WebSocket 上执行的单个 ReceiveAsync 操作的结果的此类实例。</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 类的实例。</summary>
      <param name="count">接收到的字节数。</param>
      <param name="messageType">接收消息的类型。</param>
      <param name="endOfMessage">指示是否是一个最终消息。</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>创建 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 类的实例。</summary>
      <param name="count">接收到的字节数。</param>
      <param name="messageType">接收消息的类型。</param>
      <param name="endOfMessage">指示是否是一个最终消息。</param>
      <param name="closeStatus">指示 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> 连接的状态。</param>
      <param name="closeStatusDescription">
        <paramref name="closeStatus" /> 的说明。</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>指示远程终结点初始关闭握手的原因。</summary>
      <returns>返回 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>返回描述关闭握手由远程终结点启动的原因的可选说明。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>指示 WebSocket 接收的字节数。</summary>
      <returns>返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>指示则消息是否被完全接收。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>指示当前消息是否为 UTF-8 消息或二进制消息。</summary>
      <returns>返回 <see cref="T:System.Net.WebSockets.WebSocketMessageType" />。</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary> 定义 WebSockets 事例可能性的不同状态。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>指示正常完成 WebSocket 关闭握手。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>自该远程终结点接收的关闭消息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>向远程终结点发送了关闭消息。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>连接到远程终结点处的链接。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>在 HTTP 握手完成之后的初始状态。</summary>
    </member>
  </members>
</doc>