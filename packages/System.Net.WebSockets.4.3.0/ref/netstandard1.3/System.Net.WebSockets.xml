<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocket" /> class.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Aborts the WebSocket connection and cancels any pending IO operations.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the WebSocket protocol specification section 7.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.The task object representing the asynchronous operation. </returns>
      <param name="closeStatus">Indicates the reason for closing the WebSocket connection.</param>
      <param name="statusDescription">Specifies a human readable explanation as to why the connection is closed.</param>
      <param name="cancellationToken">The token that can be used to propagate notification that operations should be canceled.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Initiates or completes the close handshake defined in the WebSocket protocol specification section 7.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.The task object representing the asynchronous operation. </returns>
      <param name="closeStatus">Indicates the reason for closing the WebSocket connection.</param>
      <param name="statusDescription">Allows applications to specify a human readable explanation as to why the connection is closed.</param>
      <param name="cancellationToken">The token that can be used to propagate notification that operations should be canceled.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Indicates the reason why the remote endpoint initiated the close handshake.</summary>
      <returns>Returns <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Allows the remote endpoint to describe the reason why the connection was closed.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Receives data from the WebSocket connection asynchronously.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task`1" />.The task object representing the asynchronous operation. The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Byte" /> array containing the received data.</returns>
      <param name="buffer">References the application buffer that is the storage location for the received data.</param>
      <param name="cancellationToken">Propagate the notification that operations should be canceled.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Sends data over the WebSocket connection asynchronously.</summary>
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.The task object representing the asynchronous operation. </returns>
      <param name="buffer">The buffer to be sent over the connection.</param>
      <param name="messageType">Indicates whether the application is sending a binary or text message.</param>
      <param name="endOfMessage">Indicates whether the data in “buffer” is the last part of a message.</param>
      <param name="cancellationToken">The token that propagates the notification that operations should be canceled.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Returns the current state of the WebSocket connection.</summary>
      <returns>Returns <see cref="T:System.Net.WebSockets.WebSocketState" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>The subprotocol that was negotiated during the opening handshake.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Represents well known WebSocket close codes as defined in section 11.7 of the WebSocket protocol spec.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>No error specified.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Indicates an endpoint is being removed. Either the server or client will become unavailable.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>The connection will be closed by the server because of an error on the server.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) The client or server is terminating the connection because it cannot accept the data type it received.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) The client or server is terminating the connection because it has received data inconsistent with the message type.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) The client is terminating the connection because it expected the server to negotiate an extension.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Reserved for future use.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) The connection has closed after the request was fulfilled.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) The connection will be closed because an endpoint has received a message that violates its policy.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) The client or server is terminating the connection because of a protocol error.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Contains the list of possible WebSocket errors.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Indicates that the connection was terminated unexpectedly.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Indicates a general error.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Indicates an error occurred when parsing the HTTP headers during the opening handshake.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Indicates that a WebSocket frame with an unknown opcode was received.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Indicates the WebSocket is an invalid state for the given operation (such as being closed or aborted).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Indicates that an unknown native error occurred.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Indicates that the incoming request was not a valid websocket request.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Indicates that there was no native error information for the exception.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Indicates that the client requested an unsupported WebSocket subprotocol.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Indicates that the client requested an unsupported version of the WebSocket protocol.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Represents an exception that occurred when performing an operation on a WebSocket connection.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="nativeError">The native error code for the exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="nativeError">The native error code for the exception.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="nativeError">The native error code for the exception.</param>
      <param name="message">The description of the error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="nativeError">The native error code for the exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="nativeError">The native error code for the exception.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="nativeError">The native error code for the exception.</param>
      <param name="message">The description of the error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="nativeError">The native error code for the exception.</param>
      <param name="message">The description of the error.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="message">The description of the error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="error">The error from the WebSocketError enumeration.</param>
      <param name="message">The description of the error.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="message">The description of the error.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketException" /> class.</summary>
      <param name="message">The description of the error.</param>
      <param name="innerException">Indicates the previous exception that led to the current exception.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>The native error code for the exception that occurred.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Returns a WebSocketError indicating the type of error that occurred.</summary>
      <returns>Returns <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Indicates the message type.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>The message is in binary format.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>A receive has completed because a close message was received.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>The message is clear text.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>An instance of this class represents the result of performing a single ReceiveAsync operation on a WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> class.</summary>
      <param name="count">The number of bytes received.</param>
      <param name="messageType">The type of message that was received.</param>
      <param name="endOfMessage">Indicates whether this is the final message.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Creates an instance of the <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> class.</summary>
      <param name="count">The number of bytes received.</param>
      <param name="messageType">The type of message that was received.</param>
      <param name="endOfMessage">Indicates whether this is the final message.</param>
      <param name="closeStatus">Indicates the <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> of the connection.</param>
      <param name="closeStatusDescription">The description of <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Indicates the reason why the remote endpoint initiated the close handshake.</summary>
      <returns>Returns <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Returns the optional description that describes why the close handshake has been initiated by the remote endpoint.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Indicates the number of bytes that the WebSocket received.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Indicates whether the message has been received completely.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Indicates whether the current message is a UTF-8 message or a binary message.</summary>
      <returns>Returns <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary> Defines the different states a WebSockets instance can be in.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Indicates the WebSocket close handshake completed gracefully.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>A close message was received from the remote endpoint.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>A close message was sent to the remote endpoint.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>The connection is negotiating the handshake with the remote endpoint.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>The initial state after the HTTP handshake has been completed.</summary>
    </member>
  </members>
</doc>