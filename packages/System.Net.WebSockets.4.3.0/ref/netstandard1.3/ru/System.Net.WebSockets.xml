<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>Класс WebSocket позволяет приложениям отправлять и получать данные после завершения обновления WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Отменяет соединение WebSocket и отменяет все ожидающие операции ввода-вывода.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Закрывает соединение WebSocket как асинхронная операция с помощью подтверждение закрытия, определенного в 7 разделе Спецификации протокола WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.Объект задачи, представляющий асинхронную операцию. </returns>
      <param name="closeStatus">Указывает причину закрытия соединения WebSocket.</param>
      <param name="statusDescription">Задает объяснение причины закрытия соединения в понятном для человека формате.</param>
      <param name="cancellationToken">Токен, который может использоваться для распространения уведомления о том, что операции следует отменить.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Инициирует или завершает подтверждение закрытия, определенное в разделе 7 спецификации протокола WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.Объект задачи, представляющий асинхронную операцию. </returns>
      <param name="closeStatus">Указывает причину закрытия соединения WebSocket.</param>
      <param name="statusDescription">Разрешает приложениям задавать доступное для чтения людьми объяснение о том, почему соединение закрыто.</param>
      <param name="cancellationToken">Токен, который может использоваться для распространения уведомления о том, что операции следует отменить.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Указывает причину инициирования удаленной конечной точкой подтверждения закрытия.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Разрешает удаленной конечной точке описывать причины, почему соединение было закрыто.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Используется для очистки неуправляемых ресурсов для реализаций ASP.NET и резидентных реализаций.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Получает данные через соединение WebSocket асинхронно.</summary>
      <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.Объект задачи, представляющий асинхронную операцию.Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий полученные данные.</returns>
      <param name="buffer">Ссылается на буфер приложения - место хранения полученных данных.</param>
      <param name="cancellationToken">Распространение уведомления о том, что операции следует отменить.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Отправляет данные через соединение WebSocket асинхронно.</summary>
      <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.Объект задачи, представляющий асинхронную операцию. </returns>
      <param name="buffer">Буфер, отправляемый через соединение.</param>
      <param name="messageType">Указывает, двоичное или текстовое сообщение отправляет приложение.</param>
      <param name="endOfMessage">Указывает, являются ли данные в "буфере" последней частью сообщения.</param>
      <param name="cancellationToken">Токен, который распространяет уведомление о том, что операции следует отменить.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Возвращает текущее состояние подключения WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketState" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Подпротокол, который был согласован во время подтверждения открытия.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Представляет стандартные коды закрытия WebSocket, как указано в параграфе 11.7 спецификации протокола WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Ошибка не указана.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Указывает на то, что конечная точка удалена.Клиент или сервер становятся недоступными.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>Соединение будет закрыто сервером из-за ошибки на сервере.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) Клиент или сервер завершает подключение, так как он не может принять полученный тип данных.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) Клиент или сервер завершает подключение, так как он получил данные, не соответствующие типу сообщения.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) Клиент завершает подключение, поскольку ожидалось, что расширение будет согласовано сервером.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Зарезервировано для дальнейшего использования.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) Соединение закрыто после того, как запрос был выполнен.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) Соединение будет закрыто из-за того, что конечная точка получала сообщение, которое нарушает его политику.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) Клиент или сервер завершает подключение из-за ошибки протокола.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Содержит список возможных ошибок WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Указывает, что подключение было неожиданно прервано.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Показывает общую ошибку.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Указывает, что произошла ошибка при разборе заголовков HTTP во время подтверждения открытия.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Указывает, что был получен кадр WebSocket с неизвестным кодом операции.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Указывает, что WebSocket находится в недопустимом состоянии для заданной операции (например, закрывается или прерывается).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Указывает, что произошла неизвестная собственная ошибка.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Указывает, что входящий запрос не был допустимым запросом WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Указывает, что для исключения не было никаких собственных сведений об ошибке.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Указывает, что клиент запросил неподдерживаемую версию подпротокола WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Указывает, что клиент запросил неподдерживаемую версию протокола WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Представляет исключение, возникшее при выполнении операции на соединении WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="nativeError">Машинный код ошибки для исключения.</param>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Ошибка от перечисления WebSocketError.</param>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Описание ошибки.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Описание ошибки.</param>
      <param name="innerException">Указывает предыдущее исключение, которое привело к появлению текущего исключения.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>Машинный код ошибки для возникшего исключения.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Возвращает WebSocketError, указывающий тип происшедшей ошибки.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketError" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Указывает тип сообщения.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>Сообщение должно быть в двоичном формате.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>Получение завершено из-за того, что было получено сообщение закрывания.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>Сообщение в виде открытого текста.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Экземпляр этого класса, представляющий результат выполнения одной операцию ReceiveAsync на WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Число полученных байтов.</param>
      <param name="messageType">Тип полученного сообщения.</param>
      <param name="endOfMessage">Указывает, является ли данное сообщение конечным.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Создает экземпляр класса <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Число полученных байтов.</param>
      <param name="messageType">Тип полученного сообщения.</param>
      <param name="endOfMessage">Указывает, является ли данное сообщение конечным.</param>
      <param name="closeStatus">Указывает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> подключения.</param>
      <param name="closeStatusDescription">Описание параметра <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Указывает причину инициирования удаленной конечной точкой подтверждения закрытия.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Возвращает необязательное описание, которое показывает, почему подтверждение закрытия было инициировано удаленной конечной точкой.</summary>
      <returns>Возвращает <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Указывает количество байтов, полученных объектом WebSocket.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Указывает, было ли сообщение получено полностью.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Указывает, сообщением UTF-8 или двоичным сообщением является текущее сообщение.</summary>
      <returns>Возвращает <see cref="T:System.Net.WebSockets.WebSocketMessageType" />.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary> Указывает различные состояния, в которых может быть экземпляр WebSockets.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Указывает, что подтверждение закрытия WebSocket завершилось правильно.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Сообщение о закрытии было получено от удаленной конечной точки.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Сообщение о закрытии было отправлено удаленной конечной точке.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>Соединение согласовывает подтверждение с удаленной конечной точкой.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Зарезервировано для использования в будущем.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>Начальное состояние после завершения подтверждения HTTP.</summary>
    </member>
  </members>
</doc>