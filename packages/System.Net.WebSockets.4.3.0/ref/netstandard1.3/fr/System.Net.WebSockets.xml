<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>La classe WebSocket permet aux applications d'envoyer et recevoir des données une fois la mise à niveau de WebSocket terminée.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>Abandonne la connexion WebSocket et annule toutes les opérations d'E/S en attente.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Ferme la connexion WebSocket sous forme d'opération asynchrone à l'aide du protocole de transfert de fermeture défini dans la Spécification du protocole WebSocket (section 7).</summary>
      <returns>retourne <see cref="T:System.Threading.Tasks.Task" /> ;Objet de tâche représentant l'opération asynchrone. </returns>
      <param name="closeStatus">Indique la raison de la fermeture de la connexion WebSocket.</param>
      <param name="statusDescription">Spécifie une explication lisible du motif de fermeture de la connexion.</param>
      <param name="cancellationToken">Jeton qui peut être utilisé pour propager la notification indiquant que les opérations doivent être annulées.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Initialise et termine le protocole de transfert de fermeture défini dans la spécification du protocole WebSocket (section 7).</summary>
      <returns>retourne <see cref="T:System.Threading.Tasks.Task" /> ;Objet de tâche représentant l'opération asynchrone. </returns>
      <param name="closeStatus">Indique la raison de la fermeture de la connexion WebSocket.</param>
      <param name="statusDescription">Permet aux applications de spécifier une explication lisible par l'utilisateur quant à la fermeture de connexion.</param>
      <param name="cancellationToken">Jeton qui peut être utilisé pour propager la notification indiquant que les opérations doivent être annulées.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>Indique la raison pour laquelle le point de terminaison distant a initialisé le protocole de transfert de fermeture.</summary>
      <returns>retourne <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>Permet au point de terminaison distant de décrire la raison de fermeture de la connexion.</summary>
      <returns>retourne <see cref="T:System.String" /> ;</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>Utilisé pour nettoyer des ressources non managées pour ASP.NET et des implémentations auto-hébergées.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Reçoit des données de la connexion WebSocket de façon asynchrone.</summary>
      <returns>retourne <see cref="T:System.Threading.Tasks.Task`1" /> ;Objet de tâche représentant l'opération asynchrone.La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un tableau <see cref="T:System.Byte" /> contenant les données reçues.</returns>
      <param name="buffer">Référence la mémoire tampon d'application qui est l'emplacement de stockage des données reçues.</param>
      <param name="cancellationToken">Propage la notification indiquant que des opérations doivent être annulées.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envoie des données via la connexion WebSocket de façon asynchrone.</summary>
      <returns>retourne <see cref="T:System.Threading.Tasks.Task" /> ;Objet de tâche représentant l'opération asynchrone. </returns>
      <param name="buffer">Mémoire tampon à envoyer sur la connexion.</param>
      <param name="messageType">Indique si l'application envoie un message binaire ou texte.</param>
      <param name="endOfMessage">Indique si les données dans la « mémoire tampon » est la dernière partie d'un message.</param>
      <param name="cancellationToken">Jeton qui propage la notification indiquant que les opérations doivent être annulées.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>Retourne l'état actuel de la connexion de WebSocket.</summary>
      <returns>retourne <see cref="T:System.Net.WebSockets.WebSocketState" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>Sous-protocole négocié pendant l'établissement de la liaison d'ouverture.</summary>
      <returns>retourne <see cref="T:System.String" /> ;</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>Représente des codes de fermeture WebSocket connus, comme définis dans la section 11.7 de la spécification de protocole WebSocket.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>Aucune erreur spécifiée.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) Indique qu'un point de terminaison a été supprimé.Le serveur ou le client deviendra indisponible.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>La connexion sera fermée par le serveur en raison d'une erreur sur le serveur.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) Le client ou le serveur met fin à la connexion car le type de données reçu n'est pas accepté.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) Le client ou le serveur met fin à la connexion car les données reçues ne sont pas cohérentes avec le type de message.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) Le client met fin à la connexion car la gestion d'une extension de la part du serveur était attendue.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1004) Réservé à un usage futur.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) La connexion s'est fermée après que l'exécution de la requête.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) La connexion sera fermée car le message reçu par un point de terminaison ne respecte pas la stratégie de ce dernier.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) Le client ou le serveur met fin à la connexion suite à une erreur de protocole.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>Contient la liste d'erreurs WebSocket possibles.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>Indique que la connexion a été interrompue de manière inattendue.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>Indique une erreur générale.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>Indique qu'une erreur s'est produite lors de l'analyse des en-têtes HTTP pendant l'établissement de la liaison d'ouverture.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>Indique qu'un frame de WebSocket avec un opcode inconnu a été reçu.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>Indique que le WebSocket n'est pas valide pour l'opération donnée (telles que la fermeture ou l'abandon).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>Indique qu'une erreur native inconnue s'est produite.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>Indique que la requête entrante n'est pas une requête Websock valide.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>Indique qu'il n'y avait aucune information d'erreur native pour l'exception.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>Indique que le client a demandé un sous-protocole WebSocket non pris en charge.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>Indique que le client a demandé une version non prise en charge du protocole WebSocket.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>Représente une exception qui s'est produite lors de l'exécution d'une opération sur une connexion WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="nativeError">Code d'erreur natif de l'exception.</param>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="error">Erreur de l'énumération de WebSocketError.</param>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Description de l'erreur.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketException" />.</summary>
      <param name="message">Description de l'erreur.</param>
      <param name="innerException">Indique la précédente exception qui a abouti à l'exception actuelle.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>Code d'erreur natif de l'exception qui s'est produite.</summary>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>Retourne une classe WebSocketError indiquant le type d'erreur qui s'est produit.</summary>
      <returns>retourne <see cref="T:System.Net.WebSockets.WebSocketError" /> ;</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>Indique le type de message.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>Le message est au format binaire.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>Réception terminée car un message de fermeture a été reçu.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>Message en texte clair.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>Une instance de cette classe représente le résultat d'effectuer une opération unique de ReceiveAsync sur un WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Nombre d'octets reçus.</param>
      <param name="messageType">Type de message reçu.</param>
      <param name="endOfMessage">Indique s'il s'agit du message final.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" />.</summary>
      <param name="count">Nombre d'octets reçus.</param>
      <param name="messageType">Type de message reçu.</param>
      <param name="endOfMessage">Indique s'il s'agit du message final.</param>
      <param name="closeStatus">Indique l'état <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> de la connexion.</param>
      <param name="closeStatusDescription">Description de <paramref name="closeStatus" />.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>Indique la raison pour laquelle le point de terminaison distant a initialisé le protocole de transfert de fermeture.</summary>
      <returns>retourne <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>Retourne la description facultative qui décrit la raison pour laquelle le protocole de transfert de fermeture a été initialisé par le point de terminaison distant.</summary>
      <returns>retourne <see cref="T:System.String" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>Indique le nombre d'octets reçus par WebSocket.</summary>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>Indique si le message a été reçu complètement.</summary>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>Indique si le message actuel est un message UTF-8 ou un message binaire.</summary>
      <returns>retourne <see cref="T:System.Net.WebSockets.WebSocketMessageType" /> ;</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary> Définit les différents états qu'une instance WebSockets peut inclure.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>Réservé à une utilisation future.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>Indique que le protocole de transfert de fermeture WebSocket s'est terminé normalement.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>Message de fermeture reçu du point de terminaison distant.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>Message de fermeture envoyé au point de terminaison distant.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>La connexion négocie le protocole de transfert avec le point de terminaison distant.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>Réservé à une utilisation future.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>État initial une fois l'établissement de la liaison HTTP terminé.</summary>
    </member>
  </members>
</doc>