<Window
        xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:resx="clr-namespace:WinHue3.Resources"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:creator="clr-namespace:WinHue3.Functions.Rules.Creator"
        xmlns:controls="clr-namespace:WinHue3.Controls"
        xmlns:behaviors="clr-namespace:WinHue3.Functions.Behaviors"
        xmlns:light="clr-namespace:WinHue3.Philips_Hue.HueObjects.LightObject"
        xmlns:group="clr-namespace:WinHue3.Philips_Hue.HueObjects.GroupObject"
        xmlns:sensor="clr-namespace:WinHue3.Philips_Hue.HueObjects.NewSensorsObject"
        xmlns:scene="clr-namespace:WinHue3.Philips_Hue.HueObjects.SceneObject"
        xmlns:schedule="clr-namespace:WinHue3.Philips_Hue.HueObjects.ScheduleObject"
        xmlns:rule="clr-namespace:WinHue3.Philips_Hue.HueObjects.RuleObject"
        xmlns:rlink="clr-namespace:WinHue3.Philips_Hue.HueObjects.ResourceLinkObject"
        xmlns:bridgeObjects="clr-namespace:WinHue3.Philips_Hue.BridgeObject.BridgeObjects"
        xmlns:rules="clr-namespace:WinHue3.Functions.Rules"
        x:Class="WinHue3.Functions.Rules.Creator.Form_RuleCreator"
        mc:Ignorable="d"
        Title="Rule Creator" Height="476.171" Width="733.495" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="/WinHue3;component/Resources/rules.png" >
    <Window.DataContext>
        <creator:RuleCreatorViewModel/>
    </Window.DataContext>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBox Margin="0,0,10,10" TextWrapping="Wrap" Text="{Binding Name}" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="24">
            <i:Interaction.Behaviors>
                <behaviors:TextBoxWatermarkBehavior Text="{x:Static resx:GUI.RuleCreatorForm_Name}"/>
            </i:Interaction.Behaviors>
        </TextBox>
        <TabControl Margin="0,0,0,10" Grid.Row="1" Grid.ColumnSpan="3">
            <TabItem Header="{x:Static resx:GUI.RuleCreatorForm_Conditions}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="2.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ListView ItemsSource="{Binding ListRuleConditions}" SelectedItem="{Binding SelectedRuleCondition }" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="1" behaviors:OnClickBehavior.Command="{Binding Condition_SelectRuleConditionCommand}" BorderBrush="#FFABADB3" Grid.Column="3" Grid.Row="3" Grid.ColumnSpan="2" Grid.RowSpan="3" Margin="0,0,0,10">
                        <ListView.InputBindings>
                            <KeyBinding Key="Escape" Command="{Binding Condition_ClearSelectedRuleConditionCommand}"/>
                        </ListView.InputBindings>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="2" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="222"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding address}" Grid.Column="0" Grid.Row="0" TextWrapping="Wrap" Padding="5,0,0,0"/>
                                    <TextBlock Text="{Binding operator}" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0"/>
                                    <TextBlock Text="{Binding value}" Grid.Column="0" Grid.Row="2" TextWrapping="Wrap" Padding="5,0,0,0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding operator}" Value="dx">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button Content="{x:Static resx:GUI.Button_Add}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="73" Height="21" Command="{Binding Condition_AddConditionCommand}" Grid.Column="1" Grid.Row="6"/>
                    <controls:BindableTreeView x:Name="TvProperties" ItemsSource="{Binding ListConditionProperties}"  VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" SelectedItem_="{Binding SelectedConditionProperty, Mode=TwoWay}" Grid.ColumnSpan="2"
                                               Grid.Column="0" Grid.Row="3">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="rules:HuePropertyTreeViewItem">
                                <Setter Property="IsSelected" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </controls:BindableTreeView>
                    <ComboBox x:Name="cbOperator" VerticalAlignment="Top"  SelectedValuePath="Tag" SelectedValue="{Binding ConditionOperator}"  Style="{StaticResource {x:Type ComboBox}}"
                              Grid.Column="0" Grid.Row="5" Height="22" Grid.ColumnSpan="2" Margin="0,0,0,10">
                        <i:Interaction.Behaviors>
                            <behaviors:ComboBoxWatermarkBehavior Text="(Choose the operator)"/>
                        </i:Interaction.Behaviors>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Equals}" Tag="eq"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Changed}" Tag="dx"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Delayed_Changed}" Tag="ddx"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_In}" Tag="in"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Not_In}" Tag="not in"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Stable}" Tag="stable"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Not_Stable}" Tag="not stable"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Lower_Than}" Tag="lt"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.RuleCreatorForm_Greater_Than}" Tag="gt"/>
                    </ComboBox>
                    <TextBox Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding ConditionValue, NotifyOnSourceUpdated=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"  IsEnabled="{Binding CanEnterConditionValue}" Grid.Row="6" Margin="0,0,83,0" Grid.ColumnSpan="2">
                        <TextBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static resx:GUI.Copy}" Command="ApplicationCommands.Copy"/>
                                <MenuItem Header="{x:Static resx:GUI.Cut}" Command="ApplicationCommands.Cut"/>
                                <MenuItem Header="{x:Static resx:GUI.Paste}" Command="ApplicationCommands.Paste"/>
                                <Separator/>
                                <MenuItem Header="Button Event">
                                    <MenuItem Header="Hue Tap">
                                        <MenuItem Header="Button 1" Command="{Binding BtnEventCommand}" CommandParameter="34"/>
                                        <MenuItem Header="Button 2" Command="{Binding BtnEventCommand}" CommandParameter="16"/>
                                        <MenuItem Header="Button 3" Command="{Binding BtnEventCommand}" CommandParameter="17"/>
                                        <MenuItem Header="Button 4" Command="{Binding BtnEventCommand}" CommandParameter="18"/>
                                    </MenuItem>
                                    <MenuItem Header="Hue Dimmer">
                                        <MenuItem Header="Button 1 (on)">
                                            <MenuItem Header="Initial Press" Command="{Binding BtnEventCommand}" CommandParameter="1000"/>
                                            <MenuItem Header="Hold" Command="{Binding BtnEventCommand}" CommandParameter="1001" />
                                            <MenuItem Header="Short Released" Command="{Binding BtnEventCommand}" CommandParameter="1002"/>
                                            <MenuItem Header="Long Released" Command="{Binding BtnEventCommand}" CommandParameter="1003"/>
                                        </MenuItem>
                                        <MenuItem Header="Button 2 (Dim Up)">
                                            <MenuItem Header="Initial Press" Command="{Binding BtnEventCommand}" CommandParameter="2000"/>
                                            <MenuItem Header="Hold" Command="{Binding BtnEventCommand}" CommandParameter="2001"/>
                                            <MenuItem Header="Short Released" Command="{Binding BtnEventCommand}" CommandParameter="2002"/>
                                            <MenuItem Header="Long Released" Command="{Binding BtnEventCommand}" CommandParameter="2003"/>
                                        </MenuItem>
                                        <MenuItem Header="Button 1 (Dim Down)">
                                            <MenuItem Header="Initial Press" Command="{Binding BtnEventCommand}" CommandParameter="3000"/>
                                            <MenuItem Header="Hold" Command="{Binding BtnEventCommand}" CommandParameter="3001"/>
                                            <MenuItem Header="Short Released" Command="{Binding BtnEventCommand}" CommandParameter="3002"/>
                                            <MenuItem Header="Long Released" Command="{Binding BtnEventCommand}" CommandParameter="3003"/>
                                        </MenuItem>
                                        <MenuItem Header="Button 1 (off)">
                                            <MenuItem Header="Initial Press" Command="{Binding BtnEventCommand}" CommandParameter="4000"/>
                                            <MenuItem Header="Hold" Command="{Binding BtnEventCommand}" CommandParameter="4001"/>
                                            <MenuItem Header="Short Released" Command="{Binding BtnEventCommand}" CommandParameter="4002"/>
                                            <MenuItem Header="Long Released" Command="{Binding BtnEventCommand}" CommandParameter="4003"/>
                                        </MenuItem>
                                    </MenuItem>
                                </MenuItem>
                            </ContextMenu>
                        </TextBox.ContextMenu>
                        <i:Interaction.Behaviors>
                            <behaviors:TextBoxWatermarkBehavior Text="{x:Static resx:GUI.RuleCreatorForm_Value_Watermark}"/>
                        </i:Interaction.Behaviors>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ConditionOperator}" Value="dx">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <ComboBox x:Name="cbConditionType" VerticalAlignment="Top" behaviors:CommandBehavior.Command="{Binding Condition_SelectConditionObjectTypeCommand}" behaviors:CommandBehavior.RoutedEventName="SelectionChanged" SelectedValue="{Binding SelectedRuleConditionType}" SelectedValuePath="Tag"
                              Grid.Column="0" Height="22" Grid.Row="1">
                        <i:Interaction.Behaviors>
                            <behaviors:ComboBoxWatermarkBehavior Text="{x:Static resx:GUI.Object_Type_Watermark}"/>
                        </i:Interaction.Behaviors>
                        <ComboBoxItem Content="Lights" Tag="{x:Type light:Light}" />
                        <ComboBoxItem Content="Groups" Tag="{x:Type group:Group}"/>
                        <ComboBoxItem Content="Sensors" Tag="{x:Type sensor:Sensor}"/>
                        <ComboBoxItem Content="Scenes" Tag="{x:Type scene:Scene}"/>
                        <ComboBoxItem Content="Schedules" Tag="{x:Type schedule:Schedule}"/>
                        <ComboBoxItem Content="Resource Links" Tag="{x:Type rlink:Resourcelink}"/>
                        <ComboBoxItem Content="Rule" Tag="{x:Type rule:Rule}"/>
                        <ComboBoxItem Content="Config" Tag="{x:Type bridgeObjects:BridgeSettings}"/>
                    </ComboBox>

                    <ComboBox x:Name="cbConditionObject" VerticalAlignment="Top" ItemsSource="{Binding ListConditionHueObjects}" SelectedItem="{Binding SelectedConditionHueObject}" behaviors:CommandBehavior.Command="{Binding Condition_SelectConditionHueObjectCommand}" behaviors:CommandBehavior.RoutedEventName="SelectionChanged"  Style="{StaticResource {x:Type ComboBox}}" Grid.Column="1" Height="22" Grid.Row="1" Margin="10,0,0,0">
                        <i:Interaction.Behaviors>
                            <behaviors:ComboBoxWatermarkBehavior Text="{x:Static resx:GUI.Object_Watermark}"/>
                        </i:Interaction.Behaviors>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <Image Height="16" Source="{Binding Image}"></Image>
                                    <TextBlock Text=" - "></TextBlock>
                                    <TextBlock Text="{Binding name}"></TextBlock>
                                </WrapPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Content="{x:Static resx:GUI.Button_Delete}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="73" Command="{Binding Condition_RemoveRuleConditionCommand}" Height="21" Grid.Column="4" Grid.Row="6"/>
                    <Button Content="{x:Static resx:GUI.Button_Clear}" VerticalAlignment="Top" Command="{Binding Condition_ClearSelectedRuleConditionCommand}" Height="21" Grid.Column="3" Grid.Row="6" HorizontalAlignment="Left" Width="73"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static resx:GUI.RuleCreatorForm_Actions}">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="2.5*"/>
                        <ColumnDefinition Width="2.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding ListRuleActions}" SelectedItem="{Binding SelectedRuleAction}" behaviors:OnClickBehavior.Command="{Binding Action_SelectRuleActionCommand}" BorderBrush="#FFABADB3" AutomationProperties.IsRowHeader="True" BorderThickness="1" Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="2">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="222"/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding address}" Grid.Column="0" Grid.Row="0"/>
                                    <TextBlock Text="{Binding method}" Grid.Column="0" Grid.Row="1"/>
                                    <TextBlock Text="{Binding body}" Grid.Column="0" Grid.Row="2"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <xctk:PropertyGrid x:Name="Pg" ShowSearchBox="False" ShowSortOptions="False" ShowSummary="False" ShowTitle="False" SelectedObject="{Binding ActionProperties}" Grid.Row="3" Grid.ColumnSpan="2"/>
                    <ComboBox x:Name="cbActionObject" VerticalAlignment="Top" ItemsSource="{Binding ListHueObjects}" SelectedItem="{Binding SelectedHueObject}" behaviors:CommandBehavior.Command="{Binding Action_SelectActionObjectCommand}" behaviors:CommandBehavior.RoutedEventName="SelectionChanged" Height="22" Style="{StaticResource {x:Type ComboBox}}" Grid.Row="1" Grid.Column="1" Margin="10,0,0,0">
                        <i:Interaction.Behaviors>
                            <behaviors:ComboBoxWatermarkBehavior Text="{x:Static resx:GUI.Object_Watermark}"/>
                        </i:Interaction.Behaviors>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <Image Height="16" Source="{Binding Image}"/>
                                    <TextBlock Text=" - "/>
                                    <TextBlock Text="{Binding name}"/>
                                </WrapPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cbActionType" VerticalAlignment="Top" SelectedValuePath="Tag" SelectedValue="{Binding SelectedHueObjectType}" behaviors:CommandBehavior.Command="{Binding Action_SelectHueObjectTypeCommand}" behaviors:CommandBehavior.RoutedEventName="SelectionChanged" Style="{StaticResource {x:Type ComboBox}}" Height="22" Grid.Row="1" >
                        <i:Interaction.Behaviors>
                            <behaviors:ComboBoxWatermarkBehavior Text="{x:Static resx:GUI.Object_Type_Watermark}"/>
                        </i:Interaction.Behaviors>
                        <ComboBoxItem Content="{x:Static resx:GUI.Lights}" Tag="{x:Type light:Light}"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.Groups}" Tag="{x:Type group:Group}"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.Scenes}" Tag="{x:Type scene:Scene}"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.Sensors}" Tag="{x:Type sensor:Sensor}"/>
                        <ComboBoxItem Content="{x:Static resx:GUI.Schedules}" Tag="{x:Type schedule:Schedule}"/>
                    </ComboBox>
                    <StackPanel Grid.Column="3" VerticalAlignment="Center" Width="73" Grid.Row="3" Margin="10,0">
                        <Button Content="{x:Static resx:GUI.Button_Add}" VerticalAlignment="Top" Command="{Binding Action_AddActionCommand}" Height="21"/>
                        <Button Content="{x:Static resx:GUI.RuleCreatorForm_Actions_MoveUp}" VerticalAlignment="Top" Height="21" Command="{Binding Action_MoveUpRuleActionCommand}" Margin="0,10,0,0"/>
                        <Button Content="{x:Static resx:GUI.RuleCreatorForm_Actions_MoveDown}" VerticalAlignment="Top" Height="21" Command="{Binding Action_MoveDownRuleActionCommand}" Margin="0,10,0,0"/>
                        <Button Content="{x:Static resx:GUI.Button_Delete}" VerticalAlignment="Top" Height="21" Command="{Binding Action_RemoveRuleActionCommand}" Background="Red" Margin="0,10,0,0"/>
                        <Button Content="{x:Static resx:GUI.Button_Clear}" VerticalAlignment="Top" Command="{Binding Action_ClearRuleActionCommand}" Height="21" Margin="0,10,0,0"/>
                    </StackPanel>

                </Grid>
            </TabItem>
        </TabControl>
        <Button Name="BtnSave" Content="{x:Static resx:GUI.Button_Save}" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Top" Width="73" Height="21" Click="BtnSave_Click" Grid.Row="2" Grid.Column="1" />
        <Button Name="BtnCancel" Content="{x:Static resx:GUI.Button_Cancel}" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Width="73" Height="21" Click="BtnCancel_Click" Grid.Row="2" Grid.Column="2"/>
        <CheckBox Content="{x:Static resx:GUI.RuleCreatorForm_Enabled}" IsChecked="{Binding Enabled}" VerticalAlignment="Center" Grid.Column="2" Margin="0,0,0,10"/>
    </Grid>
</Window>

    
    