<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinHue3"
        xmlns:behaviors="clr-namespace:WinHue3.Functions.Behaviors"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:resources="clr-namespace:WinHue3.Resources"
        xmlns:groupObject="clr-namespace:WinHue3.Philips_Hue.HueObjects.GroupObject"
        xmlns:lightObject="clr-namespace:WinHue3.Philips_Hue.HueObjects.LightObject"
        xmlns:sceneObject="clr-namespace:WinHue3.Philips_Hue.HueObjects.SceneObject"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:creator="clr-namespace:WinHue3.Functions.HotKeys.Creator"
        xmlns:controls="clr-namespace:WinHue3.Controls"
        x:Class="WinHue3.Functions.HotKeys.Creator.Form_HotKeyCreator"
        mc:Ignorable="d"
        Title="{x:Static resources:GUI.Form_HotKeyCreator_Title}" Height="506.231" Width="962.867" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" Icon="/WinHue3;component/Resources/hotkeys.png" PreviewKeyUp="Window_PreviewKeyUp">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="BtnSave" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=CbListObjects}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding (Validation.HasError), ElementName=CbObjectType}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <creator:HotKeyCreatorViewModel/>
    </Window.DataContext>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="98"/>
            <ColumnDefinition Width="46"/>
            <ColumnDefinition Width="196"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <xctk:PropertyGrid x:Name="PgObjectPresets" ShowSearchBox="False" ShowSortOptions="False" ShowTitle="False" SelectedObject="{Binding PropertyGridObject}" Grid.Column="4" Grid.RowSpan="6"/>
        <Button x:Name="BtnDone" Content="Done" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Click="btnDone_Click" Grid.Row="8" Height="21" Grid.Column="4" Margin="0,10,0,0"/>
        <Button x:Name="BtnAdd" Style="{StaticResource BtnSave}"  Content="{x:Static resources:GUI.Button_Add}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="75" Command="{Binding AddHotkeyCommand}" Height="21" Grid.Row="6" Margin="0,10,0,0"/>
        <xctk:WatermarkComboBox x:Name="CbObjectType" VerticalAlignment="Center" Height="24" SelectedValue="{Binding ObjectType}" SelectedValuePath="Tag"  IsEnabled="{Binding NotGeneric}" behaviors:CommandBehavior.Command="{Binding ChangeObjectTypeCommand}" behaviors:CommandBehavior.RoutedEventName="SelectionChanged" Watermark="{x:Static resources:GUI.Object_Type_Watermark}" Grid.Row="3" Grid.ColumnSpan="2">
            <ComboBoxItem x:Name="CbOtLight" Content="{x:Static resources:GUI.Lights}" Tag="{x:Type lightObject:Light}"/>
            <ComboBoxItem x:Name="CbOtGroup" Content="{x:Static resources:GUI.Groups}" Tag="{x:Type groupObject:Group}"/>
            <ComboBoxItem x:Name="CbOtScene" Content="{x:Static resources:GUI.Scenes}" Tag="{x:Type sceneObject:Scene}"/>
        </xctk:WatermarkComboBox>
        <xctk:WatermarkComboBox x:Name="CbListObjects" VerticalAlignment="Top" Height="24" DisplayMemberPath="name" ItemsSource="{Binding ListHueObject}" SelectedItem="{Binding SelectedHueObject, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" IsEnabled="{Binding NotGeneric}" Watermark="{x:Static resources:GUI.Object_Watermark}" Grid.Row="4" Grid.ColumnSpan="3" Margin="0,10"/>
        <Label x:Name="Label1" Content="{x:Static resources:GUI.Form_HotKeyCreator_BridgeObject}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="328" Height="25.96" Grid.Row="2" Grid.ColumnSpan="3" Margin="0,10,0,0"/>
        <Button x:Name="BtnRecordKeyPress" Content="{x:Static resources:GUI.Form_HotKeyCreator_Record}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Command="{Binding RecordHotKeyCommand}" Height="30" Grid.Row="5" />
        <Label x:Name="Label2" Content="{Binding CurrentHotKey, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Height="30" Background="{Binding HotKeyModel.RecordButtonColor}" BorderBrush="#FF8E8E8E" BorderThickness="1" Grid.Row="5" Grid.ColumnSpan="2" Grid.Column="1" Margin="10,0,0,0"/>
        <xctk:WatermarkTextBox x:Name="TbHotkeyName" Height="23" Text="{Binding HotKeyModel.Name, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Watermark="{x:Static resources:GUI.Label_Name}" Margin="0" Grid.ColumnSpan="3"/>
        <xctk:WatermarkTextBox x:Name="TbHotkeyDesc" Height="23" TextWrapping="Wrap" Text="{Binding HotKeyModel.Description, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Watermark="{x:Static resources:GUI.Form_HotKeyCreator_Description}" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,10,0,0"/>

        <DataGrid x:Name="DataGrid" VerticalAlignment="Top" Height="206" AlternationCount="-5" SelectionMode="Single" CanUserReorderColumns="False" CanUserResizeRows="False" AutoGenerateColumns="False" ItemsSource="{Binding ListHotKeys}" SelectedItem="{Binding SelectedHotKey}" AlternatingRowBackground="#FFF2F2F2" BorderBrush="#FFCECECE" AllowDrop="True" CanUserAddRows="False" AutomationProperties.IsColumnHeader="True" Background="White" AutomationProperties.IsRowHeader="True" GridLinesVisibility="Horizontal" Grid.Row="7" Grid.ColumnSpan="5" Margin="0,10,0,0">
            <DataGrid.Columns>
                <DataGridTextColumn Header="{x:Static resources:GUI.Label_Name}" Binding="{Binding Name}"  Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_Description}" Binding="{Binding Description}"  Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_ID}" Binding="{Binding id}"  Width="50" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_Type}" Binding="{Binding objecType.Name}"  Width="100" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_HotKey}" Binding="{Binding Hotkey}"  Width="150" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_Preset}" Binding="{Binding properties}"  Width="*" IsReadOnly="True"/>
                <DataGridTextColumn Header="{x:Static resources:GUI.Form_HotKeyCreator_ProgramPath}" Binding="{Binding ProgramPath}"  Width="*" IsReadOnly="True"/>
            </DataGrid.Columns>
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DeleteHotKeyCommand}"/>
            </DataGrid.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectExistingHotkeyCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <Button x:Name="BtnClearFields" Content="{x:Static resources:GUI.Button_Clear}" Command="{Binding ClearFieldsCommand}"  HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="74" Height="21" Grid.Row="6" Margin="28.4,0,0,0" Grid.Column="2"/>
        <CheckBox x:Name="ChbGeneric" Content="{x:Static resources:GUI.Form_HotKeyCreator_Generic}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="156" IsChecked="{Binding IsGeneric}" ToolTip="{x:Static resources:GUI.Form_HotKeyCreator_Generic_Tooltip}" Height="15.098" Grid.Row="3" Grid.ColumnSpan="3" Grid.Column="2" Margin="10,0,0,0"/>
        <TextBox x:Name="TextBox" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{x:Static resources:GUI.Form_HotKeyCreator_Warning_Generic}" Grid.Row="8" Grid.ColumnSpan="5" VerticalContentAlignment="Center" BorderBrush="{x:Null}" Width="661.94"/>
        <Button x:Name="BtnHelpGeneric" Content="?" HorizontalAlignment="Right" VerticalAlignment="Center" Width="32" Click="btnHelpGeneric_Click" Height="25" Grid.Row="3" Grid.Column="2"/>
        <Label Grid.Row="6" Grid.Column="4" Padding="5,0,5,5" Margin="0,10,0,0" VerticalAlignment="Bottom" >
            <Label.Style>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Content" Value="{Binding HotKeyModel.ProgramPath}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HotKeyModel.ProgramPath, NotifyOnSourceUpdated=True}" Value="{x:Null}">
                            <Setter Property="Content" Value="{x:Static resources:GUI.Form_HotKeyCreator_ChooseApp}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
        <Button Content="{x:Static resources:GUI.Form_HotKeyCreator_AppButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Height="21" Command="{Binding ChooseProgramCommand}" Grid.Row="6" Grid.Column="4"/>
        <Button Content="X" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="21" Height="21" Background="Red" Command="{Binding RemoveProgramCommand}" Grid.Row="6" Grid.Column="4" Margin="0,0,85,0"/>




    </Grid>
</Window>



